http://tympanus.net/Development/DynamicGrid/ - динамическая таблица, то что надо

- http://camapka.ru/maps/historical/108-adm-kuybyshev-1940.html#1 скачать
- http://camapka.ru/maps/thematic/114-lotsia-river.html#1
- http://camapka.ru/maps/historical.html


USAGE:
http://ivaynberg.github.io/select2/
https://github.com/melanke/Watch.JS
http://www.quirksmode.org/dom/events/contextmenu.html - context menu event browsers support
http://timschlechter.github.io/bootstrap-tagsinput/examples/bootstrap3/ - Tags


ToAdd:
https://github.com/mapbox/leaflet-image - экспорт изображения карты
https://github.com/mapbox/leaflet-knn - поиск ближайшей точки
http://www.queness.com/post/11755/11-multi-touch-and-touch-events-javascript-libraries - touch events
http://omarriott.com/aux/leaflet-js-non-geographical-imagery/ - для привязки


TODO:

- тур по сайту вынесли в JSON
- menu настроек

Планы:

1 стадия - Минимально нужный функционал:
- Сайт-визитка + форум + wiki + блог

2 этап:
- Выбор языка
- Сделать внешнюю базу для синхронизации
- При обрыве соединения выдавать предупреждение, а после восстановления синхронизировать базы
- Мобильные браузеры
- Горячие клавиши http://www.openjs.com/scripts/events/keyboard_shortcuts/
- заменить алерты и конфирмы на http://www.webmasters.by/images/articles/jquery.alerts/index.html (станавливает ля поток)
- Написать тесты
- Добавление и редактирование меток рызных типов
- Быстрые клавиши
- Geolocation API
- Быстрые перемещения
- Измеритель расстояний
- Треки GPS
- Быстрые подсказки
- При обновлении окно новых возможностей
- Чат и видеочат
- Комментирование, привязка к соцсетям
- Дополнительные KML слои
- Режим путешествия по карте, плюс привязка к таймлайнам
- Сделать что-то тиа календаря событий, можно на внешнем API
- попробовать сделать маркет в виде стрелосчки с подписями, чтобы можно было отображать карты войн. И что-то типа динамических картинок, для поэтапного показывания маркеров (всеже это наверное должны делать KML слои)
- если карта меньше определенного размера то убирать навесные элементы (навесить на функцию ресайза)
- кэш карт 
    * https://groups.google.com/forum/#!topic/pouchdb/3CAU93puheE
    * http://stackoverflow.com/questions/14113278/storing-image-data-for-offline-web-application-client-side-storage-database
    * http://stackoverflow.com/questions/16721312/using-pouchdb-as-an-offline-raster-map-cache
    * https://github.com/tbicr/OfflineMap

- наложение слоев
- сохранение куска экрана в файл и создание привязки к озику
- азимут
- поиск фотографий окрестностей точки на всяких сервисах
- высоты под курсором
- доступные снимки как в саспланет
- поиск названий (https://github.com/stefanocudini/leaflet-search)
- коллаж из нескольких карт, как изначально хотел на печать
- отображение списка карт которые есть под точкой
- круги расстояний и времени, азимут (время - сделать заранее сетку по всем точкам определить время до этой точки от дома а потом просто делать выборку)
- слои wikimapia, panoramio, яндекс картинки
- добавить лицензию
- Logo при загрузке
- сделать метки напоминания (например тат. калмаюр поле под озимыми на июль 2014 года ) + смс напоминания и на почту
- http://copypastecharacter.com/arrows - стрелки
- карусель из разных наборов карт (один  набор - второй - третий - опять первый)
- коррекция привязки
- горячие клавиши для карт

- привязка карт (continuousWorld: continuousWorld)
- wms
- быстрое открытие активной карты на все окно










https://drive.google.com/folderview?id=0B1gRcO428ISsbEg2c25oUkRVSkE&usp=sharing - В папке google
https://googledrive.com/host/0B1gRcO428ISsbEg2c25oUkRVSkE/








var crsCorrect_goodPoint = function (){
    mapOpt.goodPoint = mapOpt.currLatLng;
 }

var crsCorrect_badPoint = function (){

    var good = mapOpt.goodPoint;

    if (good) {

        var bad = mapOpt.currLatLng;

        var mapId = GetMapID(mapOpt.nameMaps[mapOpt.activeMap]);

        if (mapId != -1) {
            mapOpt.mapsList[mapId].crs.projection.dY = bad.lat - good.lat;
            mapOpt.mapsList[mapId].crs.projection.dX = bad.lng - good.lng;
        }

        good = undefined;

        mapOpt.arrayMaps[mapOpt.activeMap].fireEvent("dragend");

    }
 }

var crsCorrect_dropCorrection = function (){

    $.each(mapOpt.mapsList, function (i,v) {
        try       { v.crs.projection.dY = v.crs.projection.dX = 0 }
        catch (e) { }
    });

    mapOpt.arrayMaps[mapOpt.activeMap].fireEvent("dragend");

 }

var gps_moveToCoords = function () {
    
    // http://diveintohtml5.info/geolocation.html
    
    var show_map = function (position) {
        var latitude = position.coords.latitude;
        var longitude = position.coords.longitude;
        console.log(latitude, longitude)
        PanMaps([latitude, longitude]);
        // let's show a map or do something interesting!        
     }

    var handle_error = function (err) {
        console.log(err)
        if (err.code == 1) {
            // user said no!
        }
     }

    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(show_map, handle_error);
    } else {
        console.log("Нет координат")
    }
 }

L.TileLayer.ZMP = L.TileLayer.extend({

    getTileUrl: function(tilePoint) {
        this._adjustTilePoint(tilePoint);

        return L.Util.template(
            this._url,
            L.extend({
            s: this._getSubdomain(tilePoint),
            z: this._getZoomForUrl(),
            x: tilePoint.x,
            y: tilePoint.y,
            yInv: this._getWrapTileNum() - tilePoint.y - 1, // TMS для карт привязки
            _s0123: this.sSubdomain("0123"),
            _s1234: this.sSubdomain("1234"),
            _z17: 17 - this._getZoomForUrl(),
            _z1: this._getZoomForUrl() - 1,
            _z_1: this._getZoomForUrl() + 1,
            _Galileo: this.sGalileo("Galileo"),
            _Gagarin: this.sGalileo("Gagarin"),
            _rosreestr: this.sRosreestr(tilePoint.x, tilePoint.y, this._getZoomForUrl()),
            x_kosmo: this.x_kosmo(tilePoint.x, this._getZoomForUrl()),
            y_kosmo: this.y_kosmo(tilePoint.y, this._getZoomForUrl()),
            x1000: Math.floor(tilePoint.x / 1000),
            y1000: Math.floor(tilePoint.y / 1000),
            bing_bird: this.bing_bird(tilePoint.x, tilePoint.y, this._getZoomForUrl()),
        },
            this.options));
    },

    sSubdomain: function(t) {
        return t.substr(Math.round((t.length - 1) * Math.random()), 1);
    },

    sGalileo: function(t) {
        return t.substr(0, Math.round(t.length * Math.random()));
    },

    // Перевод из десятичного в двоичный
    Dec2Bin: function(n) {
        for (var s = ''; n != 0;
        (n >>>= 1)) s = ((n & 1) ? '1' : '0') + s;
        return s;
    },

    sRosreestr: function(x, y, z) {

        text = "";
        x2 = this.Dec2Bin(x);
        y2 = this.Dec2Bin(y);
        x0 = "";
        y0 = "";

        for (var i = 1; i <= z - x2.length; i++) {
            x0 += "0";
        }
        x2 = x0 + x2;

        for (var i = 1; i <= z - y2.length; i++) {
            y0 += "0";
        }
        y2 = y0 + y2;

        for (var i = 7; i <= z; i++) {
            text += y2.substr(0, i - 6) + "-" + x2.substr(0, i - 6) + "/";
        }
        text += y2 + "-" + x2;

        // console.log(text)

        return text;
    },

    x_kosmo: function(x, z) {
        // inttostr(-((round(intpower(2,GetZ-1)))div 2)+(GetX))

    },

    y_kosmo: function(y, z) {
        // inttostr(-((Round(intpower(2,GetZ-1)))div 2)+ (Round(intpower(2,GetZ-1))-(GetY+1)))
    },

    bing_bird: function(x, y, z) {
        var res = "";
        osX = Math.floor(Math.round(Math.pow(2, z)) / 2);
        osY = Math.floor(Math.round(Math.pow(2, z)) / 2);
        prX = osX;
        prY = osY;
        for (var i = 2; i <= z + 1; i++) {
            prX = Math.floor(prX / 2);
            prY = Math.floor(prY / 2);
            if (x < osX) {
                osX = osX - prX;
                if (y < osY) {
                    osY = osY - prY;
                    res += '0';
                } else {
                    osY = osY + prY;
                    res += '2';
                }
            } else {
                osX = osX + prX;
                if (y < osY) {
                    osY = osY - prY;
                    res += '1';
                } else {
                    osY = osY + prY;
                    res += '3';
                }
            }
        }
        return res;
    }

 });



https://github.com/jacobtoye/Leaflet.iconlabel - всплывающие нащвания
https://github.com/kartena/Leaflet.EditableHandlers - фигуры и измерения
https://github.com/jtreml/leaflet.measure - расстояния

http://lite.launchlist.net/ - чеклист при запуске
http://wootapa-watable.appspot.com/ - еще таблицы
http://handsontable.com/ - таблицы как excel

http://codecanyon.net/item/jquery-notify/1161570 - всплывающие подсказки
http://codeseven.github.io/toastr/ - еще подсказки
http://dhtmlx.com/docs/products/dhtmlxMessage/index.shtml - Еще подсказки
http://needim.github.io/noty/ - Самые лучшие вроде

http://habrahabr.ru/post/163535/ - выборка из массивов

https://github.com/jensarps/IDBWrapper - IndexedDb

http://cesium.agi.com/demos.html - 3D глобус на JavaScript
http://tinydata.ru/index.html#
https://github.com/dfilatov/jspath - поиск как XPath

http://mmenu.frebsite.nl/ - меню на мобильном

http://www.opennet.ru/opennews/art.shtml?num=36695 - чат и всякое прямо на сайте
http://formalize.me/ - формы

http://www.html5rocks.com/ru/tutorials/file/dndfiles/ - FileAPI

http://jster.net/category/mapping-libraries

http://mapicons.nicolasmollet.com/ - иконки
http://html5.by/blog/fullscreen-javascript-api/ - FullScreenAPI

http://foundation.zurb.com/ - Аналог бутстрапа
http://www.berriart.com/sidr/#usage - выезжающее меню
http://heelhook.github.io/chardin.js/ - Инструкция поверх всего, для первого ознакомления
http://kreaturamedia.com/layerslider-jquery-3d-demo-slider/ - классный слайдер
http://padolsey.github.io/sonic-creator/#snake - заставка при загрузке

http://maps.ilovevitaly.com/places - аналогичный сервис с несколькими картами

http://usablica.github.io/intro.js/- пошаговая презентация сайта
http://bashooka.com/coding/powerful-jquery-image-map-plugins/ - добавление карт 7 библиотек
http://habrahabr.ru/post/181766/ - Карты на D3js

https://developer.mozilla.org/en-US/docs/HTML/Using_the_application_cache - КЭШ
http://diveintohtml5.info/offline.html - КЭШ

http://habrahabr.ru/qa/39809/ - обрезка изображений

Интересные API: http://daker.me/2013/06/5-html5-javascript-apis-to-keep-an-eye-on.html
    Battery Status API
    Device Orientation API
    Page Visibility API


http://www.outyear.co.uk/smint/ - Заебатый дизайн для сайтика

http://conversejs.org/ - еще чатик

http://easelinc.github.io/tourist/ - еще один тур по сайту
http://linkedin.github.io/hopscotch/ - и еще
http://imperavi.com/redactor/ - редактор WISWYG

http://landsatlook.usgs.gov/ - Снимки LandSAT

http://habrahabr.ru/post/183630/ - Notification API

http://poselok-programmistov.ru/faq/ - Дизайн сайта на Bootstrap

https://plus.google.com/u/0/+GoogleChromeDevelopers/posts/MvaqnzEoPKT - localhost на телефоне
http://habrahabr.ru/post/184926/ - FulscreenApi
https://github.com/neovov/Fullscreen-API-Polyfill - для FullScreenApi улучшатор
http://www.inserthtml.com/2013/06/history-api/ - History API
http://alexwolfe.github.io/Buttons/ - кнопочки

https://github.com/Prinzhorn/skrollr - парралакс супер просто
http://www.jsdelivr.com/ cdn
http://tilecache.org/docs/README.html - кэш сервер

http://docs.locusmap.eu/doku.php/manual:convert_img_to_sql - из ozi в тайлы

http://lab.hakim.se/reveal-js/#/ - презентации суперски

ftp://ftp.ntsomz.ru/2013/July/10/1500/ - снимки ежедневные сос путника

https://wrapbootstrap.com/theme/flat-scroll-one-page-theme-WB0RL445S - неплохой шаблон для личного сайта
https://wrapbootstrap.com - шаблоны для bootstrap

http://stackoverflow.com/questions/1068834/object-comparison-in-javascript/1144249#1144249 - сравнение двух обектов





WatchJS

    this.setWatch = function(collection){
        watch(parent[collection], function(option, action, newvalue, oldvalue){
            console.log(option, action, newvalue, oldvalue, _.has(parent[collection], option), collection);
            if (_.has(parent[collection], option)){
                // console.log("in")
                parent.setOption(collection, option, newvalue);
            }
            else {
                // console.log("out")
                $.each(parent[collection], function(option, newvalue){
                    parent.setOption(collection, option, newvalue);
                })
            }
        })
     }

    $.each(sets, function(i,v){
        parent.setWatch(v);
     })


// isArray shim
if (! Array.isArray) {
    Array.isArray = function(obj) {
        return Object.prototype.toString.call(obj) === "[object Array]";
    };
 }     